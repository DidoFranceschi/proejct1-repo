OBJECTIVE
Build a unified training CSV per VIN that contains synchronized SoC and Voltage (VPD, VREST) inputs, ready to be joined later with vehicle features (make, model, year, etc.).

üîÅ INPUT FILES

Category	File Name	Notes
Embedded (SoC)	input.csv (Athena raw)	Has VIN, ESN, UTC timestamp, JSON blobs (SoC, IGN)
output_expanded.csv (parsed)	Flattened SoC data, easier to work with
Dongle (Voltage)	GD201_CODEX_14_SoCTraining_13Apr.xlsx	High-res voltage, parsed
rawdatadongle.csv (Athena raw)	Original voltage ping source
Inventory	Vehicle Inventory List ... embedded.xlsx
... dongle.xlsx	VIN ‚Üí ESN mapping only, no cross-match between dongle & embedded
üß© WHAT TO EXTRACT
For every VIN, extract:


Metric	Description
VIN	from input or dongle
ESN	traceability ID from both input sources
SoC	from embedded input or parsed
VPD	last voltage before IGN OFF (under load)
VREST	first voltage after IGN ON (rested voltage)
IGN State	from embedded or dongle ‚Äì IGN ON/OFF
Timestamp EDT	UTC ‚Üí Eastern (America/New_York) time conversion
‚ö†Ô∏è Note: Only some rows have VIN or IGN state‚Äîfill down as needed.

üìä FINAL CSV STRUCTURE

VIN	ESN	SoC	VPD	VREST	Timestamp (EDT)	IGN State
And a secondary file:

IGN Change Log
A filtered CSV that only shows rows when ignition state flips (ON ‚Üí OFF, OFF ‚Üí ON). Useful for debugging and voltage classification (VPD vs VREST).

üß† CLASSIFICATION RULES
To assign VPD / VREST:

VPD = last voltage before IGN turns OFF

VREST = first voltage after IGN turns ON

You can detect this using IGN state transitions.

üíº WHAT TO DO STEP BY STEP
Step 1 ‚Äì Parse Inputs
Load:

output_expanded.csv ‚Üí extract SoC %, timestamp, IGN

GD201_CODEX_14_SoCTraining_13Apr.xlsx ‚Üí high-res voltage, timestamp, IGN

input.csv and rawdatadongle.csv if you want to cross-check raw Athena

Inventory files for VIN ‚Üî ESN mappings

Step 2 ‚Äì Normalize Timestamps
Convert all timestamps to EDT (America/New_York)

Fill down VIN and ESN where missing (common for Athena pings)

Step 3 ‚Äì Detect IGN Transitions
Create a column IGN_Change where state flips from last row

Extract these rows into a second CSV: IGN_Transitions.csv

Step 4 ‚Äì Annotate VPD and VREST
For each IGN OFF, grab the voltage row just before ‚Üí VPD

For each IGN ON, grab the first voltage after ‚Üí VREST

Step 5 ‚Äì Merge by VIN
Join Embedded SoC data with Dongle voltage data on VIN (and ESN if necessary)

Align rows so that each timestamped ping has:

SoC %

Voltage (classified as VPD/VREST or none)

IGN State

Step 6 ‚Äì Output Final CSVs
One master CSV with the structure described

One secondary CSV only with rows where IGN flips